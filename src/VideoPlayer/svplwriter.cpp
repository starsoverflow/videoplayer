
#include <windows.h>
#include <tchar.h>
#include "svplwriter.h"

namespace Star_VideoPlayer
{
	// 返回值：0 成功 1 无法打开文件 2 由用户创建 禁止修改
	BOOL svplwriter::WritePlayListToFile(wstring filepath, const svpl * m_svpl)
	{
		ios::sync_with_stdio(false);

		wfstream fs;
		fs.open(filepath, ios::in);
		fs.imbue(locale(locale::classic(), new codecvt_utf8<wchar_t>));   // utf-8编码

		if (fs.is_open()) {
			// 判断bom
			int begin = 0;
			if (fs.get() == 0xFEFF) {
				begin = 1;
			}
			fs.clear();
			fs.seekg(begin, ios::beg);
			if (fs.get() != (wint_t)EOF) {  // 不是空文件
				// 判断是否由用户创建
				bool isGeneratedByUser = true;
				wstring s;
				fs.clear();
				fs.seekg(begin, ios::beg);

				// first line
				getline(fs, s);
				if (s.substr(begin, 9) == L"<playlist") goto finish;
				if (s.substr(begin, 26) == L"# Generated by svplwriter") {
					isGeneratedByUser = false;
					goto finish;
				}

				while (getline(fs, s))
				{
					if (s.substr(0, 9) == L"<playlist") break;
					if (s.substr(0, 26) == L"# Generated by svplwriter") {
						isGeneratedByUser = false;
						break;
					}
				}
			finish:
				if (isGeneratedByUser) return 2;
			}
		}

		fs.close();
		fs.clear();

		fs.open(filepath, ios::out | ios::trunc);
		fs.imbue(locale(locale::classic(), new codecvt_utf8<wchar_t>));   // utf-8编码

		if (!fs.is_open()) return 1;

		fs << L"# Generated by svplwriter\n# Version: 1.1\n# If you don't want the programme to modify this file, please delete all the lines above.\n";

		fs << L"# DefaultPlaylist=" << m_svpl->config.normalplaylist << L"\n";
		fs << L"# HideCursorTimeout=" << m_svpl->config.mousehidetime << L"\n";
		fs << L"# AlwaysOnTop=" << (m_svpl->config.alwaystop ? L"True" : L"False") << L"\n";
		fs << L"# Location=" << m_svpl->config.location.x << L"," << m_svpl->config.location.y << L"\n";
		fs << L"# Size=" << m_svpl->config.size.x << L"," << m_svpl->config.size.y << L"\n";
		fs << L"# BorderColor=" << hex << m_svpl->config.borderColor << dec << L"\n";
		fs << L"# WindowAspectRatio=" << m_svpl->config.windowAspectRatio.x << L":" << m_svpl->config.windowAspectRatio.y << L"\n";
		
#define ats(x) L" " _T(#x) L"=\"" << m_svpl->playlists.at(ip).x << L"\""
#define atsi(x)  L" " _T(#x) L"=\"" << m_svpl->playlists.at(ip).items.at(ii).x << L"\""

		for (unsigned int ip = 0;ip < m_svpl->playlists.size();ip++)
		{
			fs << L"<playlist" << ats(currentindex) << ats(keepwidth) << ats(name) << ats(volume) << L">";
			for (unsigned int ii = 0;ii < m_svpl->playlists.at(ip).items.size();ii++)
			{
				fs << L"\n<item" << atsi(type) << atsi(path) << atsi(title) << atsi(volume) << atsi(begintime) << atsi(endtime) << hex << atsi(borderColor) << dec << L"/>";
			}
			fs << L"\n</playlist>\n";
		}

#undef ats
#undef atsi
		fs.close();

		ios::sync_with_stdio(true);
		return 0;
	}
}